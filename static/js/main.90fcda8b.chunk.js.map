{"version":3,"sources":["App.module.css","matrix-map.js","matrix.js","worker.js","App.js","index.js"],"names":["module","exports","matrix","callback","Error","map","row","rowIndex","value","colIndex","isPrime","num","i","s","Math","sqrt","worker","this","addEventListener","e","updatedMatrix","data","newMatrix","rows","x","alive","y","neighborCount","neighbors","j","countNeighbors","arr1","arr2","length","compare","postMessage","WebWorker","code","toString","blob","Blob","Worker","URL","createObjectURL","m","size","pattern","reducer","state","action","type","resize","newSize","console","debug","bisected","matrixMap","newEmpty","_value","floor","hourglass","limit","primes","primeCounter","faircoin","random","Array","fill","App","useReducer","dispatch","useState","iterating","setIterating","useEffect","timer","setInterval","thread","clearInterval","className","style","container","controls","onClick","onChange","name","target","min","max","step","Number","grid","gridTemplateColumns","key","activeItem","inactiveItem","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90fcda8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"grid\":\"App_grid__3DnSg\",\"inactiveItem\":\"App_inactiveItem__2nCIA\",\"activeItem\":\"App_activeItem__3NE4j\",\"controls\":\"App_controls__14oJX\"};","export default (matrix, callback) => {\n  if (!matrix) throw new Error(\"no matrix, neo\");\n  return matrix.map((row, rowIndex) => {\n    return row.map((value, colIndex) => {\n      return callback(value, rowIndex, colIndex);\n    });\n  });\n};\n","import matrixMap from \"./matrix-map\";\n\nclass Matrix {\n  constructor(size, pattern) {\n    this.size = size;\n    this.pattern = pattern;\n    // initialize the matrix\n    this[this.pattern]();\n  }\n\n  reducer = (state, action) => {\n    switch (action.type) {\n      case \"update\":\n        this.matrix = action.matrix;\n        return { matrix: this.matrix, pattern: this.pattern, size: this.size };\n\n      case \"resize\":\n        this.resize(action.size);\n        return { matrix: this.matrix, pattern: this.pattern, size: this.size };\n\n      case \"setPattern\":\n        this[action.pattern]();\n        return { matrix: this.matrix, pattern: this.pattern, size: this.size };\n\n      case \"reset\":\n        this[this.pattern]();\n        return { matrix: this.matrix, pattern: this.pattern, size: this.size };\n\n      default:\n        throw new Error(\"uh-oh\");\n    }\n  };\n\n  resize = (newSize) => {\n    this.size = newSize;\n    this[this.pattern]();\n    console.debug(`resizing`);\n  };\n\n  bisected = () => {\n    this.pattern = \"bisected\";\n    this.matrix = matrixMap(this.newEmpty(), (_value, rowIndex) => {\n      if (rowIndex === Math.floor(this.size / 2)) {\n        return true;\n      }\n      return false;\n    });\n  };\n\n  hourglass = () => {\n    this.pattern = \"hourglass\";\n    this.matrix = matrixMap(this.newEmpty(), (_value, rowIndex, colIndex) => {\n      if (colIndex >= rowIndex && colIndex < this.size - rowIndex) {\n        return false;\n      }\n      if (rowIndex * 2 > this.size) {\n        const limit = Math.floor(this.size - rowIndex) - 1;\n        if (colIndex >= limit && colIndex < this.size - limit) {\n          return false;\n        }\n      }\n      return true;\n    });\n  };\n\n  primes = () => {\n    let primeCounter = 0;\n    this.pattern = \"primes\";\n    this.matrix = matrixMap(this.newEmpty(), () => {\n      primeCounter += 1;\n      if (isPrime(primeCounter)) {\n        return true;\n      }\n      return false;\n    });\n  };\n\n  faircoin = () => {\n    this.pattern = \"faircoin\";\n    this.matrix = matrixMap(this.newEmpty(), () => {\n      return Math.random() > 0.5;\n    });\n  };\n\n  newEmpty = () => {\n    return Array(this.size)\n      .fill([])\n      .map(() => {\n        return Array(this.size).fill(false);\n      });\n  };\n}\n\nconst isPrime = (num) => {\n  for (let i = 2, s = Math.sqrt(num); i <= s; i++)\n    if (num % i === 0) return false;\n  return num > 1;\n};\n\nexport { Matrix };\n","function worker() {\n  const countNeighbors = (matrix, x, y) => {\n    let neighbors = 0;\n    for (let i = -1; i < 2; i++) {\n      for (let j = -1; j < 2; j++) {\n        if (i === 0 && j === 0) continue;\n        if (matrix[x + i]?.[y + j]) {\n          neighbors += 1;\n        }\n      }\n    }\n    return neighbors;\n  };\n\n  const update = (matrix) => {\n    return matrix.map((rows, x) => {\n      return rows.map((alive, y) => {\n        const neighborCount = countNeighbors(matrix, x, y);\n        // Any live cell with fewer than two live neighbours dies\n        if (alive && neighborCount < 2) {\n          return false;\n        }\n        // Any live cell with two or three live neighbours lives\n        if (alive && (neighborCount === 2 || neighborCount === 3)) {\n          return true;\n        }\n        // Any live cell with more than three live neighbours dies\n        if (alive && neighborCount > 3) {\n          return false;\n        }\n        // Any dead cell with exactly three live neighbours becomes a live cell\n        if (!alive && neighborCount === 3) {\n          return true;\n        }\n        return false;\n      });\n    });\n  };\n\n  const compare = (arr1, arr2) => {\n    // No length checks because arrays are always square.\n    for (let i = 0; i < arr1.length; i++) {\n      for (let j = 0; j < arr1[i].length; j++) {\n        if (arr1[i][j] !== arr2[i][j]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  this.addEventListener(\n    \"message\",\n    (e) => {\n      let updatedMatrix = false;\n      const data = e.data;\n      const newMatrix = update(data.matrix);\n\n      if (!compare(data.matrix, newMatrix)) {\n        updatedMatrix = newMatrix;\n      }\n\n      this.postMessage({ matrix: updatedMatrix });\n    },\n    false\n  );\n}\n\nclass WebWorker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob([\"(\" + code + \")()\"]);\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n\nexport { WebWorker, worker };\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport matrixMap from \"./matrix-map\";\nimport { Matrix } from \"./matrix\";\nimport { worker, WebWorker } from \"./worker\";\nimport style from \"./App.module.css\";\n\nconst defaultSize = 23;\nconst defaultSpeed = 350;\nconst m = new Matrix(defaultSize, \"bisected\");\n\nconst App = () => {\n  const [state, dispatch] = useReducer(m.reducer, {\n    matrix: m.matrix,\n    pattern: m.pattern,\n    size: m.size,\n  });\n  const [iterating, setIterating] = useState(false);\n\n  useEffect(() => {\n    if (iterating) {\n      const timer = setInterval(() => {\n        // Calculate matrix transformations on another thread.\n        const thread = new WebWorker(worker);\n        thread.addEventListener(\"message\", (e) => {\n          const updatedMatrix = e.data.matrix;\n          if (updatedMatrix) {\n            dispatch({\n              type: \"update\",\n              matrix: updatedMatrix,\n            });\n          } else {\n            setIterating(false);\n          }\n        });\n\n        thread.postMessage({ matrix: state.matrix });\n      }, defaultSpeed);\n\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  });\n\n  const toggleIterate = () => {\n    setIterating(!iterating);\n  };\n\n  const reset = () => {\n    dispatch({ type: \"reset\" });\n    setIterating(false);\n  };\n\n  const toggleItem = (y, x) => {\n    state.matrix[y][x] = !state.matrix[y][x];\n    dispatch({ type: \"update\", matrix: state.matrix });\n  };\n\n  const selectPattern = (name) => {\n    dispatch({ type: \"setPattern\", pattern: name });\n  };\n\n  const selectSize = (s) => {\n    dispatch({ type: \"resize\", size: Number(s) });\n  };\n\n  return (\n    <div className={style.container}>\n      <div className={style.controls}>\n        <button\n          onClick={() => {\n            toggleIterate();\n          }}\n        >\n          {iterating ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={() => reset()}>Reset</button>\n        <select\n          value={state.pattern}\n          onChange={(e) => {\n            selectPattern(e.target.value);\n          }}\n        >\n          <option value=\"bisected\">Bisected</option>\n          <option value=\"hourglass\">Hourglass</option>\n          <option value=\"primes\">Primes</option>\n          <option value=\"faircoin\">Fair Coin</option>\n        </select>\n        <input\n          type=\"range\"\n          name=\"matrix_size\"\n          min=\"3\"\n          max=\"75\"\n          step=\"1\"\n          value={state.size}\n          onChange={(e) => {\n            selectSize(e.target.value);\n          }}\n        />\n      </div>\n      <div\n        className={style.grid}\n        style={{\n          gridTemplateColumns: `repeat(${state.size}, 1fr)`,\n        }}\n      >\n        {matrixMap(state.matrix, (value, rowIndex, colIndex) => {\n          return (\n            <div\n              key={`${rowIndex}-${colIndex}`}\n              className={value ? style.activeItem : style.inactiveItem}\n              style={{\n                height: `${75 / state.size}vh`,\n              }}\n              onClick={() => {\n                toggleItem(rowIndex, colIndex);\n              }}\n            ></div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}